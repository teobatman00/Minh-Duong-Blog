[{"categories":["testing"],"content":"Bài viết đề cập khái niệm manual testing, những thứ cần có để trở thành manual tester chuyên nghiệp.","date":"2022-08-06","objectID":"/Minh-Duong-Blog/posts/testing/manual-testing-la-gi/","tags":["testing","manual test"],"title":"Manual testing là gì? Những gì cần có để trở thành manual tester chuyên nghiệp?","uri":"/Minh-Duong-Blog/posts/testing/manual-testing-la-gi/"},{"categories":["testing"],"content":"Bạn đang tìm hiểu khái niệm về manual testing ? Bạn đang phân vân chưa biết manual testing (MT) có những ưu điểm và nhược điểm gì ? Bạn đang phân vân khái niệm giữa manual testing và automation testing. Hãy cùng tìm hiểu các vấn đề trên thông qua bài viết dưới đây. ","date":"2022-08-06","objectID":"/Minh-Duong-Blog/posts/testing/manual-testing-la-gi/:0:0","tags":["testing","manual test"],"title":"Manual testing là gì? Những gì cần có để trở thành manual tester chuyên nghiệp?","uri":"/Minh-Duong-Blog/posts/testing/manual-testing-la-gi/"},{"categories":["testing"],"content":"Khái niệm manual testing (Kiểm thử thủ công) Manual testing là một trong những dạng kiểm thử phần mềm hoặc thông qua một chương trình kiểm thử phần mềm và được thực hiện bằng tay bởi các tester. Mục đích của manual testing là phát hiện các lỗi bug nhỏ cho đến lớn khi thực hiện kiểm thử phần mềm. Từ đó có thể đưa ra hướng giải quyết nhằm đảm bảo cho phần mềm hoạt động ổn định nhất trước khi chuyển giao cho khách hàng. Manual testing là gì? (Ảnh: Azilen Technologies) ","date":"2022-08-06","objectID":"/Minh-Duong-Blog/posts/testing/manual-testing-la-gi/:1:0","tags":["testing","manual test"],"title":"Manual testing là gì? Những gì cần có để trở thành manual tester chuyên nghiệp?","uri":"/Minh-Duong-Blog/posts/testing/manual-testing-la-gi/"},{"categories":["testing"],"content":"Ưu điểm và nhược điểm của manual testing Bên cạnh định nghĩa được nêu trên thì manual testing còn có ưu điểm và nhược điểm như sau: Ưu điểm Việc thực hiện test đơn giản, đặc biệt trong việc test giao diện phần mềm, qua đó giúp mang lại kết quả nhanh chóng và trực quan nhất. Nếu chương trình có thay đổi nhỏ thì manual tester sẽ không mất quá nhiều thời gian cho việc thực hiện kiểm thử. Các tester sẽ có nhiều thời gian hơn trong việc thực hiện khám phá kiểm thử (exploratory testing). Qua đó có thể hiểu thêm về những lỗi phát sinh khó phát hiện nhằm nâng cao tay nghề. Do kiểm thử thủ công được thực hiện bằng tay nên tester không cần phải hiểu biết nhiều về kiến thức lập trình. Đối với các dự án nhỏ thì manual testing sẽ giúp tiết kiệm thời gian và cho phí trước khi release. Nhược điểm Bên cạnh một số ưu điểm nêu trên thì manual testing còn có một số nhược điểm như sau: Manual testing tiêu tốn nhiều thời gian và nhân lực trong việc tìm ra bug. Việc thuê nhiều nhân lực cho manual testing sẽ khiến chi phí dự án gia tăng. Kết quả tìm thấy ít được tin cậy bởi đôi khi có thể xảy ra sai sót của con người. Đối với những công việc test được thực hiện lặp đi lặp lại nhiều lần (ví dụ như test performance, stress test,…) đòi hỏi phải có tool tự động và thực sự chuyên nghiệp thì việc thực hiện đối với manual tester trở nên khó khăn. Tổng số lỗi phát hiện đối với kiểm thử thủ công ít hơn so với kiểm thử tự động do đơn vị kiểm thử thủ công thường bỏ qua đơn vị nhỏ nhất. ","date":"2022-08-06","objectID":"/Minh-Duong-Blog/posts/testing/manual-testing-la-gi/:2:0","tags":["testing","manual test"],"title":"Manual testing là gì? Những gì cần có để trở thành manual tester chuyên nghiệp?","uri":"/Minh-Duong-Blog/posts/testing/manual-testing-la-gi/"},{"categories":["testing"],"content":"Công việc cần làm của manual tester Qua định nghĩa, ưu điểm và nhược điểm được nêu trên thì công việc của một manual tester là kiểm tra cũng như đảm bảo phần mềm hoạt động ổn định và hiệu quả. Thông qua việc kiểm thử phần mềm thủ công, tester sẽ phát hiện nhanh chóng các lỗi tồn tại trên phần mềm và báo cáo lỗi cho bộ phận kỹ thuật cũng như bộ phận phát triển để fix lỗi trước khi bàn giao cho khách hàng. Chính vì vậy, trước khi vào nghề manual testing thì bạn cần phải trau dồi kiến thức cơ bản cũng như kỹ năng cần thiết để nắm bắt tốt công việc của mình. Dưới đây là một số vấn đề cũng như kỹ năng bạn cần chuẩn bị như sau: Hiểu rõ định nghĩa manual test, kỹ thuật test cơ bản, ưu điểm và nhược điểm của manual testing, các công cụ cơ bản cần phải có để thực hiện manual test,… Kỹ năng đọc hiểu tài liệu nghiệp vụ, tư duy phân tích để tìm ra lỗi có thể xảy ra đối với phần mềm Kỹ năng viết báo cáo để tổng hợp lỗi đã phát hiện nhằm báo cáo với các bên liên quan trong việc phát triển phần mềm Kỹ năng giao tiếp để phối hợp, trao đổi với các bên liên quan nhằm thu thập thông tin cần thiết trong việc kiểm thử và phát hiện lỗi đối với phần mềm Kiến thức cơ bản về chuyên ngành mà phần mềm đang hướng tới (ví dụ như ứng dụng chuyển tiền ngân hàng thì phải có kiến thức cơ bản về tài chính) nhằm có hiểu biết cơ bản để đưa ra chiến lược test phù hợp Trình độ tiếng Anh để tìm hiểu các tài liệu hướng dẫn của nước ngoài một cách dễ dàng hơn. Đây cũng là yếu tố để giúp một tester ghi điểm đối với nhà tuyển dụng. ","date":"2022-08-06","objectID":"/Minh-Duong-Blog/posts/testing/manual-testing-la-gi/:3:0","tags":["testing","manual test"],"title":"Manual testing là gì? Những gì cần có để trở thành manual tester chuyên nghiệp?","uri":"/Minh-Duong-Blog/posts/testing/manual-testing-la-gi/"},{"categories":["testing"],"content":"Kiến thức cần có để trở thành manual test chuyên nghiệp Ở phần cuối cùng, mình sẽ giới thiệu cho các bạn những kiến thức cần trang bị để trở thành một manual tester chuyên nghiệp. Vì vậy bạn đừng nên bỏ qua phần này nhé ! Để trở thành một manual tester chuyên nghiệp thì đòi hỏi bạn phải xác định rõ hướng đi cho bản thân như nên đầu tư vào cái nào, học hỏi các nào, cần cải thiện chỗ nào, thực hành như thế nào,….Những điều đó sẽ giúp bạn thắp sáng ngọn lửa đam mê cũng như nỗ lực quyết tâm tiếp thu mọi kiến thức mới. Hãy nỗ lực hết sức mình để trở thành manual test chuyên nghiệp Dưới đây là một số kiến thức bạn cần trang bị để bước chân vào làm manual testing, cụ thể như sau: Kiến thức chung Các kiến thức cơ bản cũng như một số kiến thức nâng cao về máy tính, cài đặt phần mềm, sử dụng phần mềm máy tính,… Các kiến thức cơ bản về front-end như HTML, CSS, Javascript, ReactJS,… và các kiến thức về UX/UI. Định nghĩa về test, các thuật ngữ thường sử dụng trong việc test phần mềm, quá trình phát triển phần mềm, quy trình kiểm thử phần mềm,…. Định nghĩa các loại test phổ biến như Functional testing, Structural testing, Non-functional testing, change related testing, acceptance testing, system testing,… Các tài liệu nước ngoài liên quan như: What is Software Testing ?, Software Development life cycle, Quanlity Assurance vs Quality Control, Validation vs Verification,… Kiến thức riêng Lên kế hoạch test (Create a test plan): Đây là kiến thức cơ bản cần nắm để lên một kế hoạch test cơ bản và chính xác nhất. Thiết kế test case (Design a test case): Hiểu rõ về cách tạo ra và viết một test case thông dụng sao cho phù hợp với từng loại phần mềm khác nhau. Kỹ thuật thiết kế test case (Test case design techniques): Nắm rõ kỹ thuật thiết kế test case để cho việc thực hiện test case trở nên hiệu quả và bao phủ requirement của phần mềm. Báo cáo kết quả test (Test reporting): Cách viết báo cáo sẽ giúp bạn có cái nhìn tổng thể về kết quả test trong quá trình thực hiện và kết quả này cũng giúp bạn dễ dàng trao đổi với các bên liên quan nhằm đưa ra hướng giải pháp cho phần mềm. Kiến thức cơ bản về ngôn ngữ lập trình như HTML,CSS, JS, Java,…Đây là kiến thức giúp bạn hiểu rõ cách thức hoạt động của phần mềm để từ đó nâng cao kỹ năng test và xử lý mọi phát sinh về vấn đề kỹ thuật. Hy vọng rằng với những thông tin về MT mà mình chia sẻ thì bạn đã có được cái nhìn cơ bản về MT cũng như nắm chắc được những điều cần có để trở thành một MT chuyên nghiệp. Chúc bạn sớm thành công và đạt được mục tiêu mơ ước của mình. ","date":"2022-08-06","objectID":"/Minh-Duong-Blog/posts/testing/manual-testing-la-gi/:4:0","tags":["testing","manual test"],"title":"Manual testing là gì? Những gì cần có để trở thành manual tester chuyên nghiệp?","uri":"/Minh-Duong-Blog/posts/testing/manual-testing-la-gi/"},{"categories":["testing"],"content":"Bài viết so sánh sự khác biệt giữa manual testing và automation testing","date":"2022-08-04","objectID":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/","tags":["testing","auto test","manual test"],"title":"So sánh manual và automation test","uri":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/"},{"categories":["testing"],"content":"Trong những năm gần đây, automation testing phát triển mạnh mẽ. Các frameworks hỗ trợ cho việc phát triển automation testing như WebdriverIO, Cypress, TestCafe, Codeceptjs, JunitTest… đua nhau ra đời. Điều này có thể thấy rằng thị trường automation testing thật sự mở rộng. Nhiều dự án, nhiều công ty đầu tư một cách nghiêm túc cho automation testing. Điều này đặt ra một câu hỏi mà nhiều người quan tâm: liệu rằng automation testing có thực sự thay thế được manual testing hay không? Để trả lời cho câu hỏi nêu trên, chúng ta sẽ đi so sánh sự khác biệt giữa manual testing và automation testing, điểm mạnh và điểm yếu của 2 phương pháp test này. ","date":"2022-08-04","objectID":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/:0:0","tags":["testing","auto test","manual test"],"title":"So sánh manual và automation test","uri":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/"},{"categories":["testing"],"content":"1. Kiểm thử thủ công (Manual testing) Kiểm thử thủ công (manual testing) là việc tiến hành kiểm thử phần mềm mà các test case được thực hiện thủ công bởi người kiểm thử (QA/QC/Tester) mà không sử dụng bất kì công cụ tự động nào hỗ trợ. Hiện nay, khi truy cập các trang tuyển dụng về mảng test như ITviec, Vietnamwork,…, bạn sẽ thấy nhu cầu tuyển dụng và QA, QC và Manual testing rất phổ biến với mức lương phong phú và đa dạng. Điều đó cũng cho thấy manual testing hiện nay đóng vai trò quan trọng trong việc kiểm thử phần mềm. Một góc tuyển dụng QA/QC của trang tuyển dụng ITviec Điểm mạnh Các lỗi về giao diện (UX/UI) được phát hiện nhanh, phản hồi sớm về cho bộ phận phát triển (developer) Các thay đổi nhỏ về cấu trúc website (bao gồm id, class name,…), giao diện mobile app và api sẽ không ảnh hưởng đến quá trình kiểm thử Đối với các dự án nhỏ, manual test giúp release sản phẩm trong một thời gian ngắn Không yêu cầu người kiểm thử có kỹ năng về lập trình Việc thực thi test case mô phỏng đúng hành vi người dùng cuối Người kiểm thử có thể dùng phương pháp ad-hoc (adhoc test) một cách linh động Điểm yếu Tốn nhiều thời gian và nhân lực cho việc test Có những bộ test case sẽ phải thực hiện lặp đi lặp lại mỗi lần release (ví dụ như gửi tiền tiết kiệm online khi phát triển ứng dụng ngân hàng số). Điều này dẫn đến việc release gặp nhiều khó khăn và trở ngại nếu bộ test case có số lượng quá lớn Các vấn đề về lỗi của người kiểm thử (human error), ví dụ như quên thực hiện một thao tác nào đó trong kịch bản test, điều này có thể xảy ra dẫn đến kết quả kiểm thử không chính xác Khi nào nên sử dụng manual testing Dựa trên những thông tin về điểm mạnh và điểm yếu, chúng ta có thể đưa ra quyết định phù hợp khi nào sử dụng manual testing. Hiện nay, nhiều công ty về phần mềm đều đưa ra chiến lược thực hiện manual testing song song với automation testing. Qua đó có thể thấy manual testing được thực hiện khi: Triển khai tính năng mới của sản phẩm nhưng không ảnh hưởng quá nhiều đến tính năng cũ. Do đó, manual testing vẫn được ưu tiên sử dụng hơn trong trường hợp này để thời gian release được đảm bảo Cần thực hiện exploratory testing. Khi manual tester có kinh nghiệm trên sản phẩm thì có thể thực hiện các test case “Khám phá” và phát hiện ra nhiều bất thường của sản phẩm Đối với các dự án ngắn hạn, cần triển khai nhanh và không đòi hỏi nhiều kinh phí thì manual testing là lựa chọn phù hợp cho trường hợp này Đối với dự án tần suất thực hiện test thấp, khoảng 2-3 lần/năm thì không nên đầu tư vào automation testing (Ví dụ: dự án bảo trì phần mềm, dự án website nhanh, bản patch,…) ","date":"2022-08-04","objectID":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/:1:0","tags":["testing","auto test","manual test"],"title":"So sánh manual và automation test","uri":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/"},{"categories":["testing"],"content":"2. Kiểm thử tự động (Automation testing) Kiểm thử tự động là kiểm thử trong đó người kiểm thử phải viết cách kịch bản kiểm thử và sau đó sử dụng tool hỗ trợ để kiểm thử. Nhờ đó mà việc kiểm thử sẽ trở nên hiệu quả và ít tốn thời gian hơn. Kiểm thử tự động giúp cho các kịch bản kiểm thử lặp đi lặp lại nhiều lần và hỗ trợ các task kiểm thử khác khó thực hiện bằng manual hay performance test. Điểm mạnh Sử dụng tool tự động giúp tìm kiếm nhiều lỗi hơn Automation thực hiện test nhanh và hiệu quả Kết quả kiểm thử tự động chính xác Phạm vi kiểm thử tự động rộng vì kiểm tra tự động không bỏ qua kiểm tra đơn vị nhỏ nhất Automation thực hiện bằng phần mềm và tool, do đó nó hoạt động không mệt mỏi so với manual tester Quá trình kiểm thử được ghi lại, điều đó giúp kịch bản kiểm thử được thực hiện nhiều lần và thực hiện trên nhiều nền tảng khác nhau Điểm yếu Ngoài các điểm mạnh nêu trên, kiểm thử tự động còn tồn tại một số điểm yếu như sau: Chi phí cho các tool kiểm thử tốn kém, có thể làm tăng chi phí trong khâu kiểm thử dự án (ví dụ: network không ổn định, môi trường test không đảm bảo, mã nguồn sản phẩm thay đổi,…) Nếu có một thay đổi nhỏ cũng làm mất thời gian để update lại kịch bản và các đoạn script kiểm thử Tester cần phải có kiến thức lập trình để viết các script tự động kiểm thử Khi nào nên sử dụng automation testing Để sử dụng automation testing, chúng ta nên có chiến lược rõ ràng trong dự án để lựa chọn test case cho automation. Vì automation sẽ tốn nhiều thời gian để lên kịch bản, viết script, nguồn nhân lực thực hiện và chi phí cho các tool kiểm thử tự động. Qua đó, có thể cân nhắc những trường hợp nên sử dụng automation testing là: Test case thường xuyên thực hiện, chẳng hạn như acceptance testing, regression testing,…Việc thực hiện automation testing cho các test case này giúp giảm thời gian cho QA khi thực hiện những test case lặp lại, qua đó họ có nhiều thời gian để đầu tư nghiên cứu thực hiện các test case khác. Test case cần thực hiện trên nhiều môi trường khác nhau. Phù hợp với các dự án lớn, dự án phát triển liên tục trong dài hạn. ","date":"2022-08-04","objectID":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/:2:0","tags":["testing","auto test","manual test"],"title":"So sánh manual và automation test","uri":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/"},{"categories":["testing"],"content":"So sánh khác biệt chính giữa manual testing và automation testing Bài viết đã trình bày những điểm mạnh cũng như điểm yếu của từng loại testing. Bảng so sánh dưới đây sẽ giúp người đọc có cái nhìn vắn tắt đặc điểm của 2 loại test này. Yếu tố Manual testing Automation testing Chi phí thời gian Tốn thời gian thực hiện kiểm thử Thời gian kiểm thử được rút ngắn, đặc biệt có thể chạy daily tự động trên CI/CD, không cần người chạy Độ tin cậy Việc kiểm thử manual được thực hiện bởi hành động bởi con người, do đó dễ gặp lỗi do con người gây ra. Vì thế mà độ tin cậy chính xác thấp Thực hiện bởi các công cụ và phần mềm tự động nên có độ tin cậy cao hơn Giao diện thay đổi Thay đổi nhỏ về class, id,… không ảnh hưởng nhiều đến kịch bản test Dễ bị ảnh hưởng bởi source code sản phẩm Kiến thức lập trình Không đòi hỏi phải có kiến thức lập trình Phải có kiến thức lập trình để thực hiện test script Kiểm thử khám phá Dễ dàng triển khai kiểm thử khám phá Không thể thực hiện kiểm thử khám phá Thực thi song song Khi dự án có nhiều môi trường thì số lượng QA sẽ tăng lên Dễ dàng thực thi trên nhiều môi trường, không cần quá nhiều QA do có sự hỗ trợ của tool tự động Áp dụng Dự án nhỏ, thời gian thực hiện ngắn hay các test case không chạy thường xuyên Dự án lớn, đòi hỏi test case phải chạy nhiều lần ","date":"2022-08-04","objectID":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/:3:0","tags":["testing","auto test","manual test"],"title":"So sánh manual và automation test","uri":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/"},{"categories":["testing"],"content":"Tóm tắt Dựa vào định nghĩa, điểm mạnh và điểm yếu của manual testing và automation testing, có thể tóm tắt như sau: Manual testing là kiểm thử phần mềm trong đó kiểm thử được thực hiện bởi QA Đối với automation testing, người kiểm thử phải viết kịch bản bằng các tập lệnh, các đoạn script kiểm thử và có sự trợ giúp của các tool tự động kiểm thử Manual testing giúp có các nhìn trực quan và chính xác về ứng dụng Automation testing giúp tìm thấy nhiều lỗi hơn so với manual testing Manual testing cho kết quả ít tin cậy hơn do người test vẫn có thể mắc lỗi Automation testing làm tiêu tốn chi phí cho các tool kiểm thử, do đó làm gia tăng chi phí của dự án Manual testing tiêu tốn nhiều thời gian và nguồn nhân lực Automation testing cho tốc độ nhanh hơn, hiệu quả hơn so với manual testing Manual testing không yêu cầu người test phải biết ngôn ngữ lập trình Qua các vấn đề được nêu trên, để tối ưu hóa chi phí và thời gian trong quá trình kiểm thử dự án, chúng ta không nên nghiêng quá nhiều vào phương pháp thủ công hoặc tự động. Vì vậy, cần có sự kết hợp linh hoạt giữa kiểm thử thủ công và kiểm thử tự động để có thể tạo ra một sản phẩm tốt nhất cho người dùng. ","date":"2022-08-04","objectID":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/:4:0","tags":["testing","auto test","manual test"],"title":"So sánh manual và automation test","uri":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/"},{"categories":["testing"],"content":"Tài liệu tham khảo https://www.guru99.com/difference-automated-vs-manual-testing.html ","date":"2022-08-04","objectID":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/:5:0","tags":["testing","auto test","manual test"],"title":"So sánh manual và automation test","uri":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/"},{"categories":["postman"],"content":"Bài viết hướng dẫn cài đặt postman","date":"2022-06-15","objectID":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/","tags":["postman","tutorial"],"title":"Hướng dẫn cài đặt postman","uri":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/"},{"categories":["postman"],"content":"1. Postman là gì ? Postman hiện là một trong những công cụ phổ biến nhất được sử dụng trong quá trình thử nghiệm các API. Được phát triển vào năm 2012 như một dự án phụ của Abhinav Asthana để đơn giản hóa quy trình làm việc API trong thử nghiệm và phát triển. API là viết tắt của Application Programming Interface (Giao diện lập trình ứng dụng) cho phép các ứng dụng phần mềm giao tiếp với nhau thông qua các lệnh gọi API. ","date":"2022-06-15","objectID":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/:1:0","tags":["postman","tutorial"],"title":"Hướng dẫn cài đặt postman","uri":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/"},{"categories":["postman"],"content":"2. Tại sao lại sử dụng postman Với hơn 10 triệu developer sử dụng hiện nay, Postman đã trở thành một công cụ không thể thiếu vì lý do như sau: Khả năng truy cập – Để sử dụng Postman, người dùng chỉ cần đăng nhập vào tài khoản của chính họ để dễ dàng truy cập tệp mọi lúc, mọi nơi miễn là ứng dụng Postman được cài đặt trên máy tính. Sử dụng Collections (Bộ sưu tập) – Postman cho phép người dùng tạo bộ sưu tập cho các lệnh gọi API của họ. Mỗi bộ sưu tập có thể tạo các thư mục con và nhiều yêu cầu (request). Điều này giúp việc tổ chức các bộ thử nghiệm. Cộng tác – Bộ sưu tập và môi trường có thể được nhập hoặc xuất giúp chia sẻ tệp dễ dàng. Liên kết trực tiếp cũng có thể được sử dụng để chia sẻ bộ sưu tập. Tạo môi trường – Có nhiều môi trường hỗ trợ ít lặp lại các bài kiểm tra vì người dùng có thể sử dụng cùng một bộ sưu tập nhưng cho một môi trường khác. Đây là nơi tham số hóa sẽ diễn ra mà chúng ta sẽ thảo luận trong các bài học tiếp theo. Tạo thử nghiệm – Các điểm kiểm tra thử nghiệm như xác minh trạng thái phản hồi HTTP thành công có thể được thêm vào mỗi lệnh gọi API giúp đảm bảo phạm vi kiểm tra. Kiểm tra tự động hóa – Thông qua việc sử dụng Bộ sưu tập chạy hoặc Newman, các thử nghiệm có thể được chạy trong nhiều lần lặp lại tiết kiệm thời gian cho các thử nghiệm lặp đi lặp lại. Gỡ lỗi – Bảng điều khiển Postman giúp kiểm tra dữ liệu nào đã được truy xuất giúp dễ dàng gỡ lỗi kiểm tra. Tích hợp liên tục - Với khả năng hỗ trợ tích hợp liên tục, các hoạt động phát triển luôn được duy trì Thống kê số lượng developer sử dụng postman ","date":"2022-06-15","objectID":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/:2:0","tags":["postman","tutorial"],"title":"Hướng dẫn cài đặt postman","uri":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/"},{"categories":["postman"],"content":"3. Cách download và cài đặt postman Là một công cụ mã nguồn mở, bạn có thể download và cài đặt theo các bước dưới đây: Bước 1: Truy cập vào trang https://www.postman.com/downloads/ và chọn nền tảng bạn muốn tải về như Mac, Window và Linux. Ở đây mình chọn nền tảng window Bước 2: File tải về được hiển thị ở dưới cửa sổ trình duyệt. Khi quá trình tải về hoàn tất, bấm nút khởi động Bước 3: Bấm nút next để bắt đầu cài đặt Bước 4: Trong màn hình kế tiêp, đăng nhập với tài khoản Postman Bước 5: Chọn workspace (màn hình làm việc) và bâm nút Save My Preferences Bước 6: Hiển thị màn hình Startup ","date":"2022-06-15","objectID":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/:3:0","tags":["postman","tutorial"],"title":"Hướng dẫn cài đặt postman","uri":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/"},{"categories":["postman"],"content":"Tóm tắt Postman là công cụ phổ biến nhất được sử dụng trong việc thử nghiêm API Các tính năng thông dụng nhất trong Postman là khả năng truy cập, sử dụng bộ sưu tập (collection), cộng tác, tích hợp liên tục Bạn nên tạo tài khoản khi sử dụng Postman, vì các collection được lưu sẵn và có sẵn trực tuyến Bạn có thể tham số hóa Request Bạn có thể tạo ra các bài test để kiểm tra các request trong postman ","date":"2022-06-15","objectID":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/:4:0","tags":["postman","tutorial"],"title":"Hướng dẫn cài đặt postman","uri":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/"}]