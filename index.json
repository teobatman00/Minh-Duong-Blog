[{"categories":["postman"],"content":"Bài viết hướng dẫn cài đặt postman","date":"2022-06-15","objectID":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/","tags":["postman","tutorial"],"title":"Hướng dẫn cài đặt postman","uri":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/"},{"categories":["postman"],"content":"1. Postman là gì ? Postman hiện là một trong những công cụ phổ biến nhất được sử dụng trong quá trình thử nghiệm các API. Được phát triển vào năm 2012 như một dự án phụ của Abhinav Asthana để đơn giản hóa quy trình làm việc API trong thử nghiệm và phát triển. API là viết tắt của Application Programming Interface (Giao diện lập trình ứng dụng) cho phép các ứng dụng phần mềm giao tiếp với nhau thông qua các lệnh gọi API. ","date":"2022-06-15","objectID":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/:1:0","tags":["postman","tutorial"],"title":"Hướng dẫn cài đặt postman","uri":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/"},{"categories":["postman"],"content":"2. Tại sao lại sử dụng postman Với hơn 10 triệu developer sử dụng hiện nay, Postman đã trở thành một công cụ không thể thiếu vì lý do như sau: Khả năng truy cập – Để sử dụng Postman, người dùng chỉ cần đăng nhập vào tài khoản của chính họ để dễ dàng truy cập tệp mọi lúc, mọi nơi miễn là ứng dụng Postman được cài đặt trên máy tính. Sử dụng Collections (Bộ sưu tập) – Postman cho phép người dùng tạo bộ sưu tập cho các lệnh gọi API của họ. Mỗi bộ sưu tập có thể tạo các thư mục con và nhiều yêu cầu (request). Điều này giúp việc tổ chức các bộ thử nghiệm. Cộng tác – Bộ sưu tập và môi trường có thể được nhập hoặc xuất giúp chia sẻ tệp dễ dàng. Liên kết trực tiếp cũng có thể được sử dụng để chia sẻ bộ sưu tập. Tạo môi trường – Có nhiều môi trường hỗ trợ ít lặp lại các bài kiểm tra vì người dùng có thể sử dụng cùng một bộ sưu tập nhưng cho một môi trường khác. Đây là nơi tham số hóa sẽ diễn ra mà chúng ta sẽ thảo luận trong các bài học tiếp theo. Tạo thử nghiệm – Các điểm kiểm tra thử nghiệm như xác minh trạng thái phản hồi HTTP thành công có thể được thêm vào mỗi lệnh gọi API giúp đảm bảo phạm vi kiểm tra. Kiểm tra tự động hóa – Thông qua việc sử dụng Bộ sưu tập chạy hoặc Newman, các thử nghiệm có thể được chạy trong nhiều lần lặp lại tiết kiệm thời gian cho các thử nghiệm lặp đi lặp lại. Gỡ lỗi – Bảng điều khiển Postman giúp kiểm tra dữ liệu nào đã được truy xuất giúp dễ dàng gỡ lỗi kiểm tra. Tích hợp liên tục - Với khả năng hỗ trợ tích hợp liên tục, các hoạt động phát triển luôn được duy trì Thống kê số lượng developer sử dụng postman ","date":"2022-06-15","objectID":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/:2:0","tags":["postman","tutorial"],"title":"Hướng dẫn cài đặt postman","uri":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/"},{"categories":["postman"],"content":"3. Cách download và cài đặt postman Là một công cụ mã nguồn mở, bạn có thể download và cài đặt theo các bước dưới đây: Bước 1: Truy cập vào trang https://www.postman.com/downloads/ và chọn nền tảng bạn muốn tải về như Mac, Window và Linux. Ở đây mình chọn nền tảng window Bước 2: File tải về được hiển thị ở dưới cửa sổ trình duyệt. Khi quá trình tải về hoàn tất, bấm nút khởi động Bước 3: Bấm nút next để bắt đầu cài đặt Bước 4: Trong màn hình kế tiêp, đăng nhập với tài khoản Postman Bước 5: Chọn workspace (màn hình làm việc) và bâm nút Save My Preferences Bước 6: Hiển thị màn hình Startup ","date":"2022-06-15","objectID":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/:3:0","tags":["postman","tutorial"],"title":"Hướng dẫn cài đặt postman","uri":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/"},{"categories":["postman"],"content":"Tóm tắt Postman là công cụ phổ biến nhất được sử dụng trong việc thử nghiêm API Các tính năng thông dụng nhất trong Postman là khả năng truy cập, sử dụng bộ sưu tập (collection), cộng tác, tích hợp liên tục Bạn nên tạo tài khoản khi sử dụng Postman, vì các collection được lưu sẵn và có sẵn trực tuyến Bạn có thể tham số hóa Request Bạn có thể tạo ra các bài test để kiểm tra các request trong postman ","date":"2022-06-15","objectID":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/:4:0","tags":["postman","tutorial"],"title":"Hướng dẫn cài đặt postman","uri":"/Minh-Duong-Blog/posts/postman/huong-dan-cai-dat-postman/"},{"categories":["testing"],"content":"Bài viết so sánh sự khác biệt giữa manual testing và automation testing","date":"2022-06-15","objectID":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/","tags":["testing","auto test","manual test"],"title":"So sánh manual và automation test","uri":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/"},{"categories":["testing"],"content":"Trong những năm gần đây, automation testing phát triển mạnh mẽ. Các frameworks hỗ trợ cho việc phát triển automation testing như WebdriverIO, Cypress, TestCafe, Codeceptjs, JunitTest… đua nhau ra đời. Điều này có thể thấy rằng thị trường automation testing thật sự mở rộng. Nhiều dự án, nhiều công ty đầu tư một cách nghiêm túc cho automation testing. Điều này đặt ra một câu hỏi mà nhiều người quan tâm: liệu rằng automation testing có thực sự thay thế được manual testing hay không? Để trả lời cho câu hỏi nêu trên, chúng ta sẽ đi so sánh sự khác biệt giữa manual testing và automation testing, điểm mạnh và điểm yếu của 2 phương pháp test này. ","date":"2022-06-15","objectID":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/:0:0","tags":["testing","auto test","manual test"],"title":"So sánh manual và automation test","uri":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/"},{"categories":["testing"],"content":"1. Kiểm thử thủ công (Manual testing) Kiểm thử thủ công (manual testing) là việc tiến hành kiểm thử phần mềm mà các test case được thực hiện thủ công bởi người kiểm thử (QA/QC/Tester) mà không sử dụng bất kì công cụ tự động nào hỗ trợ. Hiện nay, khi truy cập các trang tuyển dụng về mảng test như ITviec, Vietnamwork,…, bạn sẽ thấy nhu cầu tuyển dụng và QA, QC và Manual testing rất phổ biến với mức lương phong phú và đa dạng. Điều đó cũng cho thấy manual testing hiện nay đóng vai trò quan trọng trong việc kiểm thử phần mềm. Một góc tuyển dụng QA/QC của trang tuyển dụng ITviec Điểm mạnh Các lỗi về giao diện (UX/UI) được phát hiện nhanh, phản hồi sớm về cho bộ phận phát triển (developer) Các thay đổi nhỏ về cấu trúc website (bao gồm id, class name,…), giao diện mobile app và api sẽ không ảnh hưởng đến quá trình kiểm thử Đối với các dự án nhỏ, manual test giúp release sản phẩm trong một thời gian ngắn Không yêu cầu người kiểm thử có kỹ năng về lập trình Việc thực thi test case mô phỏng đúng hành vi người dùng cuối Người kiểm thử có thể dùng phương pháp ad-hoc (adhoc test) một cách linh động Điểm yếu Tốn nhiều thời gian và nhân lực cho việc test Có những bộ test case sẽ phải thực hiện lặp đi lặp lại mỗi lần release (ví dụ như gửi tiền tiết kiệm online khi phát triển ứng dụng ngân hàng số). Điều này dẫn đến việc release gặp nhiều khó khăn và trở ngại nếu bộ test case có số lượng quá lớn Các vấn đề về lỗi của người kiểm thử (human error), ví dụ như quên thực hiện một thao tác nào đó trong kịch bản test, điều này có thể xảy ra dẫn đến kết quả kiểm thử không chính xác Khi nào nên sử dụng manual testing Dựa trên những thông tin về điểm mạnh và điểm yếu, chúng ta có thể đưa ra quyết định phù hợp khi nào sử dụng manual testing. Hiện nay, nhiều công ty về phần mềm đều đưa ra chiến lược thực hiện manual testing song song với automation testing. Qua đó có thể thấy manual testing được thực hiện khi: Triển khai tính năng mới của sản phẩm nhưng không ảnh hưởng quá nhiều đến tính năng cũ. Do đó, manual testing vẫn được ưu tiên sử dụng hơn trong trường hợp này để thời gian release được đảm bảo ","date":"2022-06-15","objectID":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/:1:0","tags":["testing","auto test","manual test"],"title":"So sánh manual và automation test","uri":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/"},{"categories":["testing"],"content":"2. Kiểm thử tự động (Automation testing) ","date":"2022-06-15","objectID":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/:2:0","tags":["testing","auto test","manual test"],"title":"So sánh manual và automation test","uri":"/Minh-Duong-Blog/posts/testing/so-sanh-manual-va-automation-test/"},{"categories":null,"content":"Hello ","date":"0001-01-01","objectID":"/Minh-Duong-Blog/posts/second-post/:0:0","tags":null,"title":"","uri":"/Minh-Duong-Blog/posts/second-post/"}]